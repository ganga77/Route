{"ast":null,"code":"var _jsxFileName = \"/Users/gangasingh/Documents/React/route/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: `Failed to load the event with ID ${id}`,\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/gangasingh/Documents/React/route/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem.js'\nexport default function EventDetailPage(){\n    const data = useLoaderData(); \n    \n    return <>\n    <EventItem event={data.event}/> \n    </>\n}\n\nexport async function loader({request, params}){\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n        message: `Failed to load the event with ID ${id}`, \n        status: 500}\n))\n  } else {\n    return response;\n  }\n  }"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClD,eAAe,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACrC,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,oBAAOG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACPN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC7B,CAAC;AACP;AAACP,EAAA,CANuBD,eAAe;EAAA,QACtBN,aAAa;AAAA;AAAAe,EAAA,GADNT,eAAe;AAQvC,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC3C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAEpE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAC9BC,OAAO,EAAG,oCAAmCR,EAAG,EAAC;MACjDS,MAAM,EAAE;IAAG,CACnB,CAAC,CAAC;EACA,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACA;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}