{"ast":null,"code":"var _jsxFileName = \"/Users/gangasingh/Documents/React/route/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, Form, useNavigation, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const title = event ? event.title : '';\n  const description = event ? event.description : '';\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submitting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"fFTnB9/wBHYHdW8Z+pflXiaKafk=\", false, function () {\n  return [useNavigation, useNavigate];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventId = params.eventId;\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  let url = 'http://localhost:8080/events';\n  if (method === 'PATCH') {\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: `Failed to create the event`,\n      status: 500\n    }));\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","Form","useNavigation","redirect","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","title","description","navigation","isSubmitting","state","navigate","cancelHandler","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","rows","actions","onClick","_c","action","request","params","data","formData","eventId","eventData","get","image","date","url","response","fetch","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["/Users/gangasingh/Documents/React/route/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate, Form, useNavigation, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const title=event ? event.title : '';\n  const description=event ? event.description : '';\n  const navigation = useNavigation();\n\n  const isSubmitting = navigation.state === 'submitting'\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    <Form method={method} className={classes.form}>\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required defaultValue={title} />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={description}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        {isSubmitting ? <button>Submitting...</button> : <button>Save</button>}\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n\nexport async function action({request, params}) {\n  const method = request.method;\n  const data = await request.formData();\n  const eventId = params.eventId;\n\n  const eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description')\n  }\n\n  let url = 'http://localhost:8080/events';\n  if(method === 'PATCH'){\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n  const response = await fetch(url, \n  {\n      method: method,\n      headers: {\n          'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify(eventData)\n  } \n  )\n\n  if (!response.ok) {\n      throw new Response(JSON.stringify({\n          message: `Failed to create the event`, \n          status: 500}\n  ))\n    }\n    \n    return redirect('/events')\n\n    \n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,IAAI,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,kBAAkB;AAC7E,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAACF,KAAK,GAAGA,KAAK,CAACE,KAAK,GAAG,EAAE;EACpC,MAAMC,WAAW,GAACH,KAAK,GAAGA,KAAK,CAACG,WAAW,GAAG,EAAE;EAChD,MAAMC,UAAU,GAAGX,aAAa,CAAC,CAAC;EAElC,MAAMY,YAAY,GAAGD,UAAU,CAACE,KAAK,KAAK,YAAY;EACtD,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,SAASiB,aAAaA,CAAA,EAAG;IACvBD,QAAQ,CAAC,IAAI,CAAC;EAChB;EAEA,oBACEV,OAAA,CAACL,IAAI;IAACO,MAAM,EAAEA,MAAO;IAACU,SAAS,EAAEd,OAAO,CAACe,IAAK;IAAAC,QAAA,gBAC5Cd,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOe,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCnB,OAAA;QAAOoB,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,QAAQ;QAACC,YAAY,EAAEnB;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACJnB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOe,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCnB,OAAA;QAAOoB,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,KAAK;QAACC,IAAI,EAAC,OAAO;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACJnB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOe,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClCnB,OAAA;QAAOoB,EAAE,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACJnB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOe,OAAO,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDnB,OAAA;QAAUoB,EAAE,EAAC,aAAa;QAACE,IAAI,EAAC,aAAa;QAACG,IAAI,EAAC,GAAG;QAACF,QAAQ;QAACC,YAAY,EAAElB;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC,eACJnB,OAAA;MAAKY,SAAS,EAAEd,OAAO,CAAC4B,OAAQ;MAAAZ,QAAA,gBAC9Bd,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEhB,aAAc;QAAAG,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRX,YAAY,gBAAGR,OAAA;QAAAc,QAAA,EAAQ;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAAGnB,OAAA;QAAAc,QAAA,EAAQ;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACf,EAAA,CArCQH,SAAS;EAAA,QAGGL,aAAa,EAGfF,WAAW;AAAA;AAAAkC,EAAA,GANrB3B,SAAS;AAuClB,eAAeA,SAAS;AAGxB,OAAO,eAAe4B,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAM7B,MAAM,GAAG4B,OAAO,CAAC5B,MAAM;EAC7B,MAAM8B,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,OAAO,GAAGH,MAAM,CAACG,OAAO;EAE9B,MAAMC,SAAS,GAAG;IACd9B,KAAK,EAAE2B,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtB9B,WAAW,EAAE0B,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,IAAIG,GAAG,GAAG,8BAA8B;EACxC,IAAGrC,MAAM,KAAK,OAAO,EAAC;IACpBqC,GAAG,GAAG,+BAA+B,GAAGL,OAAO;EACjD;EACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAChC;IACIrC,MAAM,EAAEA,MAAM;IACdwC,OAAO,EAAE;MACL,cAAc,EAAG;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS;EAClC,CACA,CAAC;EAED,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAC9BG,OAAO,EAAG,4BAA2B;MACrCC,MAAM,EAAE;IAAG,CACnB,CAAC,CAAC;EACA;EAEA,OAAOpD,QAAQ,CAAC,SAAS,CAAC;AAG9B;AAAC,IAAA+B,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}