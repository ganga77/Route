{"ast":null,"code":"var _jsxFileName = \"/Users/gangasingh/Documents/React/route/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    isError,\n    message,\n    events\n  } = useLoaderData();\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"q1PV3VjMjs4Aus+Oj9L+hzSW1OA=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  try {\n    const response = await fetch('http://localhost:8080/events');\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n    const data = await response.json();\n    return {\n      events: data\n    };\n  } catch (error) {\n    return {\n      isError: true,\n      message: error.message\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","isError","message","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Error","data","json","error","$RefreshReg$"],"sources":["/Users/gangasingh/Documents/React/route/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from 'react-router';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n    const { isError, message, events } = useLoaderData();\n\n    if (isError) {\n        return <p>{message}</p>;\n    }\n\n    return (\n        <>\n            <EventsList events={events} />\n        </>\n    );\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n    try {\n        const response = await fetch('http://localhost:8080/events');\n\n        if (!response.ok) {\n            throw new Error('Failed to fetch data');\n        }\n\n        const data = await response.json();\n        return { events: data };\n    } catch (error) {\n        return { isError: true, message: error.message };\n    }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAEpD,IAAIQ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAQ,QAAA,EAAIF;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC3B;EAEA,oBACIZ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA,CAACF,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACR,EAAA,CAZQD,UAAU;EAAA,QACsBN,aAAa;AAAA;AAAAgB,EAAA,GAD7CV,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC3B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAO;MAAEb,MAAM,EAAEY;IAAK,CAAC;EAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAO;MAAEhB,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAEe,KAAK,CAACf;IAAQ,CAAC;EACpD;AACJ;AAAC,IAAAO,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}